section .data
    msg db "Input: ", 0  ; Mensaje que se mostrará antes de la entrada

section .bss
    input resb 1         ; Espacio para almacenar el caracter ingresado
    sum resb 1           ; Espacio para almacenar la suma

section .text
    global _start

_start:
    ; Mostrar mensaje en consola
    mov eax, 4          ; sys_write
    mov ebx, 1          ; descriptor de archivo 1 (stdout)
    mov ecx, msg        ; direccion del mensaje
    mov edx, 8          ; longitud del mensaje
    int 0x80            ; llamada al sistema

    ; Leer un caracter desde el teclado
    mov eax, 3          ; sys_read
    mov ebx, 0          ; descriptor de archivo 0 (stdin)
    mov ecx, input      ; direccion para almacenar la entrada
    mov edx, 1          ; leer 1 byte (1 caracter)
    int 0x80            ; llamada al sistema

    ; Mostrar el caracter ingresado
    mov eax, 4          ; sys_write
    mov ebx, 1          ; descriptor de archivo 1 (stdout)
    mov ecx, input      ; direccion del caracter
    mov edx, 1          ; longitud del caracter
    int 0x80            ; llamada al sistema

    ; Calcular la suma de los caracteres
    mov al, [input]     ; cargar el valor del caracter en AL
    add al, [input]     ; sumar el valor del caracter consigo mismo
    mov [sum], al       ; almacenar la suma en la variable sum

    ; Mostrar la suma
    mov eax, 4          ; sys_write
    mov ebx, 1          ; descriptor de archivo 1 (stdout)
    mov ecx, sum        ; direccion de la suma
    mov edx, 1          ; longitud de la suma (un solo byte)
    int 0x80            ; llamada al sistema

    ; Terminar el programa
    mov eax, 1          ; sys_exit
    xor ebx, ebx        ; código de salida 0
    int 0x80            ; llamada al sistema
