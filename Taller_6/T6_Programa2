section .data
    msg db "Hola, mundo", 10  ; Mensaje que se mostrará en consola, 10 es un salto de línea
    msg_len equ $ - msg        ; Longitud del mensaje

section .bss
    input resb 1   ; Espacio para almacenar el carácter ingresado
    sum resb 1     ; Espacio para almacenar la suma

section .text
    global _start

_start:
    ; Mostrar mensaje en consola
    mov eax, 4          ; sys_write
    mov ebx, 1          ; descriptor de archivo 1 (stdout)
    mov ecx, msg        ; dirección del mensaje
    mov edx, msg_len    ; longitud del mensaje
    int 0x80            ; llamada al sistema

    ; Leer un carácter desde el teclado
    mov eax, 3          ; sys_read
    mov ebx, 0          ; descriptor de archivo 0 (stdin)
    mov ecx, input      ; dirección para almacenar la entrada
    mov edx, 1          ; leer 1 byte (1 carácter)
    int 0x80            ; llamada al sistema

    ; Mostrar el carácter ingresado
    mov eax, 4          ; sys_write
    mov ebx, 1          ; descriptor de archivo 1 (stdout)
    mov ecx, input      ; dirección del carácter
    mov edx, 1          ; longitud del carácter
    int 0x80            ; llamada al sistema

    ; Calcular la suma de los caracteres
    mov al, [input]     ; cargar el valor del carácter en AL
    add al, [input]     ; sumar el valor del carácter consigo mismo
    mov [sum], al       ; almacenar la suma en la variable sum

    ; Mostrar la suma
    mov eax, 4          ; sys_write
    mov ebx, 1          ; descriptor de archivo 1 (stdout)
    mov ecx, sum        ; dirección de la suma
    mov edx, 1          ; longitud de la suma (un solo byte)
    int 0x80            ; llamada al sistema

    ; Terminar el programa
    mov eax, 1          ; sys_exit
    xor ebx, ebx        ; código de salida 0
    int 0x80            ; llamada al sistema
